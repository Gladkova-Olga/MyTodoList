[{"/Users/lisla/IT-incubator/sandbox/lesson13/src/state/store.ts":"1","/Users/lisla/IT-incubator/sandbox/lesson13/src/Task.tsx":"2","/Users/lisla/IT-incubator/sandbox/lesson13/src/Todolist.tsx":"3","/Users/lisla/IT-incubator/sandbox/lesson13/src/stories/todolists-api.stories.tsx":"4","/Users/lisla/IT-incubator/sandbox/lesson13/src/api/todolist-api.ts":"5","/Users/lisla/IT-incubator/sandbox/lesson13/src/stories/tasks-api.stories.tsx":"6","/Users/lisla/IT-incubator/sandbox/lesson13/src/api/tasks-api.ts":"7","/Users/lisla/IT-incubator/projects/MyTodoList/src/index.tsx":"8","/Users/lisla/IT-incubator/projects/MyTodoList/src/features/TodolistsList/todolists-reducer.ts":"9","/Users/lisla/IT-incubator/projects/MyTodoList/src/app/store.ts":"10","/Users/lisla/IT-incubator/projects/MyTodoList/src/components/EditableSpan/EditableSpan.tsx":"11","/Users/lisla/IT-incubator/projects/MyTodoList/src/features/TodolistsList/tasks-reducer.ts":"12","/Users/lisla/IT-incubator/projects/MyTodoList/src/reportWebVitals.ts":"13","/Users/lisla/IT-incubator/projects/MyTodoList/src/features/TodolistsList/TodolistsList.tsx":"14","/Users/lisla/IT-incubator/projects/MyTodoList/src/features/TodolistsList/Todolist/Task/Task.tsx":"15","/Users/lisla/IT-incubator/projects/MyTodoList/src/features/Login/Login.tsx":"16","/Users/lisla/IT-incubator/projects/MyTodoList/src/app/App.tsx":"17","/Users/lisla/IT-incubator/projects/MyTodoList/src/app/app-reducer.ts":"18"},{"size":892,"mtime":1592818784000,"results":"19","hashOfConfig":"20"},{"size":1603,"mtime":1594154664000,"results":"21","hashOfConfig":"20"},{"size":3487,"mtime":1611420546000,"results":"22","hashOfConfig":"20"},{"size":1439,"mtime":1627471673806,"results":"23","hashOfConfig":"20"},{"size":976,"mtime":1627471164883,"results":"24","hashOfConfig":"20"},{"size":1692,"mtime":1627474635494,"results":"25","hashOfConfig":"20"},{"size":1297,"mtime":1627474422168,"results":"26","hashOfConfig":"20"},{"size":643,"mtime":1611301434000,"results":"27","hashOfConfig":"28"},{"size":4585,"mtime":1597327450000,"results":"29","hashOfConfig":"28"},{"size":1181,"mtime":1631533768481,"results":"30","hashOfConfig":"28"},{"size":952,"mtime":1594154724000,"results":"31","hashOfConfig":"28"},{"size":5633,"mtime":1596722126000,"results":"32","hashOfConfig":"28"},{"size":425,"mtime":1607869388000,"results":"33","hashOfConfig":"28"},{"size":4017,"mtime":1631536889531,"results":"34","hashOfConfig":"28"},{"size":1773,"mtime":1596295538000,"results":"35","hashOfConfig":"28"},{"size":3653,"mtime":1631536349093,"results":"36","hashOfConfig":"28"},{"size":2674,"mtime":1631601947726,"results":"37","hashOfConfig":"28"},{"size":2364,"mtime":1631540863779,"results":"38","hashOfConfig":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vb45r7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tja0gu",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lisla/IT-incubator/sandbox/lesson13/src/state/store.ts",[],"/Users/lisla/IT-incubator/sandbox/lesson13/src/Task.tsx",["79","80","81"],"/Users/lisla/IT-incubator/sandbox/lesson13/src/Todolist.tsx",["82","83","84","85","86"],"/Users/lisla/IT-incubator/sandbox/lesson13/src/stories/todolists-api.stories.tsx",["87"],"/Users/lisla/IT-incubator/sandbox/lesson13/src/api/todolist-api.ts",[],"/Users/lisla/IT-incubator/sandbox/lesson13/src/stories/tasks-api.stories.tsx",["88"],"/Users/lisla/IT-incubator/sandbox/lesson13/src/api/tasks-api.ts",[],"/Users/lisla/IT-incubator/projects/MyTodoList/src/index.tsx",[],"/Users/lisla/IT-incubator/projects/MyTodoList/src/features/TodolistsList/todolists-reducer.ts",["89"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","/Users/lisla/IT-incubator/projects/MyTodoList/src/app/store.ts",[],["90","91"],"/Users/lisla/IT-incubator/projects/MyTodoList/src/components/EditableSpan/EditableSpan.tsx",[],"/Users/lisla/IT-incubator/projects/MyTodoList/src/features/TodolistsList/tasks-reducer.ts",["92","93"],"/Users/lisla/IT-incubator/projects/MyTodoList/src/reportWebVitals.ts",[],"/Users/lisla/IT-incubator/projects/MyTodoList/src/features/TodolistsList/TodolistsList.tsx",["94","95","96","97","98","99","100","101"],"/Users/lisla/IT-incubator/projects/MyTodoList/src/features/TodolistsList/Todolist/Task/Task.tsx",["102","103","104"],"/Users/lisla/IT-incubator/projects/MyTodoList/src/features/Login/Login.tsx",["105"],"import React from 'react'\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\nimport {useFormik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginTC} from \"./authReducer\";\nimport {AppRootStateType} from \"../../app/store\";\nimport {Redirect} from \"react-router-dom\";\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\n\n\nexport const Login = () => {\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n            rememberMe: false\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = \"Required\";\n            } else if (values.password.length <= 3) {\n                errors.password = \"Must be more than 3 symbols\"\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            dispatch(loginTC(values))\n            formik.resetForm()\n        }\n    })\n    if(isLoggedIn) {\n       return <Redirect to={\"/\"}/>\n    }\n\n    return <Grid container justify=\"center\">\n        <Grid item xs={4}>\n            <FormControl>\n                <FormLabel>\n                    <p>To log in get registered\n                        <a href={'https://social-network.samuraijs.com/'}\n                           target={'_blank'}>here\n                        </a>\n                    </p>\n                    <p>or use common test account credentials:</p>\n                    <p>Email: free@samuraijs.com</p>\n                    <p>Password: free</p>\n                </FormLabel>\n                <form onSubmit={formik.handleSubmit}>\n                    <FormGroup>\n                        <TextField\n                            label=\"Email\"\n                            margin=\"normal\"\n                            type=\"email\"\n                            // name=\"email\"\n                            // onChange={formik.handleChange}\n                            // value={formik.values.email}\n                            // onBlur={formik.handleBlur}\n                            {...formik.getFieldProps(\"email\")}\n                        />\n                        {formik.touched.email && formik.errors.email\n                        && <div style={{\"color\": \"red\"}}>{formik.errors.email}</div>}\n                        <TextField\n                            type=\"password\"\n                            label=\"Password\"\n                            margin=\"normal\"\n                            {...formik.getFieldProps(\"password\")}\n                        />\n                        {formik.touched.password && formik.errors.password &&\n                        <div style={{\"color\": \"red\"}}>{formik.errors.password}</div>}\n                        <FormControlLabel\n                            label={'Remember me'}\n                            control={<Checkbox/>}\n                            {...formik.getFieldProps(\"rememberMe\")}\n                        />\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\n                    </FormGroup>\n                </form>\n            </FormControl>\n        </Grid>\n    </Grid>\n\n}\n",["106","107"],"/Users/lisla/IT-incubator/projects/MyTodoList/src/app/App.tsx",["108"],"/Users/lisla/IT-incubator/projects/MyTodoList/src/app/app-reducer.ts",[],{"ruleId":"109","severity":1,"message":"110","line":15,"column":97,"nodeType":"111","endLine":15,"endColumn":130,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"110","line":20,"column":8,"nodeType":"111","endLine":20,"endColumn":41,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"110","line":24,"column":8,"nodeType":"111","endLine":24,"endColumn":41,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"110","line":35,"column":8,"nodeType":"111","endLine":35,"endColumn":33,"suggestions":"115"},{"ruleId":"109","severity":1,"message":"110","line":42,"column":8,"nodeType":"111","endLine":42,"endColumn":45,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"110","line":44,"column":86,"nodeType":"111","endLine":44,"endColumn":116,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"110","line":45,"column":92,"nodeType":"111","endLine":45,"endColumn":122,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"110","line":46,"column":98,"nodeType":"111","endLine":46,"endColumn":128,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":4,"column":1,"nodeType":"122","endLine":6,"endColumn":2},{"ruleId":"120","severity":1,"message":"121","line":5,"column":1,"nodeType":"122","endLine":7,"endColumn":2},{"ruleId":"123","severity":1,"message":"124","line":10,"column":45,"nodeType":"125","messageId":"126","endLine":10,"endColumn":47},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":5,"column":9,"nodeType":"133","messageId":"134","endLine":5,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":13,"column":94,"nodeType":"125","messageId":"126","endLine":13,"endColumn":96},{"ruleId":"109","severity":1,"message":"135","line":36,"column":8,"nodeType":"111","endLine":36,"endColumn":10,"suggestions":"136"},{"ruleId":"109","severity":1,"message":"137","line":41,"column":8,"nodeType":"111","endLine":41,"endColumn":10,"suggestions":"138"},{"ruleId":"109","severity":1,"message":"137","line":46,"column":8,"nodeType":"111","endLine":46,"endColumn":10,"suggestions":"139"},{"ruleId":"109","severity":1,"message":"137","line":51,"column":8,"nodeType":"111","endLine":51,"endColumn":10,"suggestions":"140"},{"ruleId":"109","severity":1,"message":"137","line":56,"column":8,"nodeType":"111","endLine":56,"endColumn":10,"suggestions":"141"},{"ruleId":"109","severity":1,"message":"137","line":61,"column":8,"nodeType":"111","endLine":61,"endColumn":10,"suggestions":"142"},{"ruleId":"109","severity":1,"message":"137","line":66,"column":8,"nodeType":"111","endLine":66,"endColumn":10,"suggestions":"143"},{"ruleId":"109","severity":1,"message":"137","line":71,"column":8,"nodeType":"111","endLine":71,"endColumn":10,"suggestions":"144"},{"ruleId":"109","severity":1,"message":"110","line":15,"column":97,"nodeType":"111","endLine":15,"endColumn":130,"suggestions":"145"},{"ruleId":"109","severity":1,"message":"110","line":20,"column":8,"nodeType":"111","endLine":20,"endColumn":41,"suggestions":"146"},{"ruleId":"109","severity":1,"message":"110","line":24,"column":8,"nodeType":"111","endLine":24,"endColumn":41,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":54,"column":28,"nodeType":"150","endLine":54,"endColumn":45},{"ruleId":"127","replacedBy":"151"},{"ruleId":"129","replacedBy":"152"},{"ruleId":"109","severity":1,"message":"153","line":35,"column":7,"nodeType":"111","endLine":35,"endColumn":9,"suggestions":"154"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["155"],["156"],["157"],["158"],["159"],["160"],["161"],["162"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["163"],"no-negated-in-lhs",["164"],"@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["165"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["166"],["167"],["168"],["169"],["170"],["171"],["172"],["173"],["174"],["175"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["163"],["164"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["176"],{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"177","fix":"180"},{"desc":"177","fix":"181"},{"desc":"177","fix":"182"},{"desc":"177","fix":"183"},{"desc":"177","fix":"184"},{"desc":"177","fix":"185"},"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},{"desc":"188","fix":"191"},{"desc":"188","fix":"192"},{"desc":"188","fix":"193"},{"desc":"188","fix":"194"},{"desc":"188","fix":"195"},{"desc":"177","fix":"196"},{"desc":"177","fix":"197"},{"desc":"177","fix":"198"},{"desc":"188","fix":"199"},"Update the dependencies array to be: [props]",{"range":"200","text":"201"},{"range":"202","text":"201"},{"range":"203","text":"201"},{"range":"204","text":"201"},{"range":"205","text":"201"},{"range":"206","text":"201"},{"range":"207","text":"201"},{"range":"208","text":"201"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"209","text":"210"},"Update the dependencies array to be: [dispatch]",{"range":"211","text":"212"},{"range":"213","text":"212"},{"range":"214","text":"212"},{"range":"215","text":"212"},{"range":"216","text":"212"},{"range":"217","text":"212"},{"range":"218","text":"212"},{"range":"219","text":"201"},{"range":"220","text":"201"},{"range":"221","text":"201"},{"range":"222","text":"212"},[693,726],"[props]",[955,988],[1145,1178],[1177,1202],[1415,1452],[1542,1572],[1666,1696],[1796,1826],[1326,1328],"[demo, dispatch, isLoggedIn]",[1497,1499],"[dispatch]",[1668,1670],[1873,1875],[2086,2088],[2287,2289],[2434,2436],[2613,2615],[765,798],[1071,1104],[1261,1294],[1234,1236]]